.header {
  height: 85vh;
  /* 80% from the color is visiable */
  background-image: linear-gradient(
      to right bottom,
      // hexa with rgb work in sass just
      rgba($color-primary-light, 0.801),
      rgba($color-primary-dark, 0.801)
    ),
    url(../img/hero-small.jpg);
  background-size: cover;
  background-position: center;
  position: relative;
  // feature query -> check if the browser support the property or no
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 75vh, 0% 100%);
    clip-path: polygon(0% 0%, 100% 0%, 100% 75vh, 0% 100%);
    height: 95vh;
  }
  // 192 dots per inch
  //  if resolution is higher than 192 and width higher than 600px this will applyed
  // this code will aplyed if (min-resolution:192dpi)and (min-width:600px) is true or (min-width:2000px)comma does mean or condition
  // -webkit-min-device-pixel-ratio:192dpi for safari
  @media only screen and(min-resolution: 192dpi) and (min-width: 37.5em),only screen and
  // 2x does mean 2 pixel ratio
    (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em) ,only screen and(min-width:125em) {
    background-image: linear-gradient(
        to right bottom,
        // hexa with rgb work in sass just
        rgba($color-primary-light, 0.801),
        rgba($color-primary-dark, 0.801)
      ),
      url(../img/hero.jpg);
  }
  @include respond(phone) {
    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 85vh, 0% 100%);
    clip-path: polygon(0% 0%, 100% 0%, 100% 85vh, 0% 100%);
  }
  &__logo {
    /* we can spcify the width instead and the hight automaticlly figuerd out by the browser */
    height: 3.5rem;
    &-box {
      position: absolute;
      top: 2rem;
      left: 2rem;
    }
  }
  /*:hover pseudo class  special state of selector*/
  /* we use pseudo class to styling element under  special condition*/
  /* .logo:hover {
        animation: moveInRight 4s ease-out;
      } */
  &__text-box {
    position: absolute;
    /* from the parent of the box */
    top: 40%;
    left: 50%;
    /* from the element itself */
    transform: translate(-50%, -50%);
    text-align: center;
    /* color: #fff;
        text-transform: uppercase; */
  }
}
